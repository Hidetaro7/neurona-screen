
doctype html
html(lang="en")
  head
    title Socket.IO chat on App Engine
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0")
    style.
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      .good button {
          font-size: 2rem;
          padding: 2rem;
      }
      #x {
        font-size: 100px;
      }
      .circle-box {
        position: fixed;
        left: 0;
        top: 0;
        
      }
      .circle {
        background-color: red;
        border-radius: 50%;
        width: 100vw;
        height: 100vw;
        transition: 1s;
      }
      .wrap {
        position: relative;
        z-index:2;
      }
  //- [START appengine_websockets_form]
  body
    .circle-box
      .circle
    .wrap
      .good
        button
          | 😆
        button
          | 🙆
        button
          | 💖
        button
          | 👍
        button
          | 🐱
        button
          | ❗

      #x
      p
        button.start はじめる
      p
        input(type="range" value="0" step="0.01" class="range" min="-2" max="2")
    form(action="")
      input(id="m" autocomplete="off")
      button Send
    //- [END appengine_websockets_form]

    script(src="/socket.io/socket.io.js")
    script(src="https://code.jquery.com/jquery-1.11.1.js")
    script.
      // [START appengine_websockets_js]
      $(function () {
        var socket = io();
        $('form').submit(function(){
          console.log($('#m').val());
          socket.emit('chat message', $('#m').val());
          $('#m').val('');
          return false;
        });
        $(".good button").on("click", function () {
          console.log("hoge")
          socket.emit('good emitted', this.innerText);
          return false;
        })

        ///
        const circle = document.querySelector(".circle");
        let rangeVal = 0
        let scale = 0;

        document.querySelector(".range").oninput = (e) => {
          rangeVal = e.target.value;
        }

        function deviceMotionRequest () {
          DeviceMotionEvent.requestPermission()
            .then(permissionState => {
              //alert(permissionState)
              if (permissionState === 'granted') {
                window.addEventListener("devicemotion", function (event) {
                  if (!event.acceleration) {
                    alert('event.accelerationIncludingGravity is null');
                    return;
                  }
                  const val = event.acceleration.x.toFixed(2);
                  scale += (val > 10 ? 10 : val )*.4 - 2
                  scale = scale < 0 ? 0 : scale;
                  document.getElementById('x').innerHTML = scale;
                  circle.style.transform = `scale(${scale})`
                  
                    socket.emit('shake', scale * (rangeVal));
                  
                  
                })
              }
            })
          }
        


        document.querySelector(".start").onclick = e => {
          deviceMotionRequest()
        }
      });



      


      // [END appengine_websockets_js]
//- [END appengine_websockets_index]

